<?php

namespace Daiquiri\ReservationBundle\Admin;

use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Form\FormMapper;

class SaleAdmin extends AbstractAdmin {

    public function configure() {
        $this->setTemplate("outer_list_rows_list", "DaiquiriReservationBundle:Sale:inner_row_sale.html.twig");
    }

    protected function configureRoutes(\Sonata\AdminBundle\Route\RouteCollection $collection) {
        $collection->add('shopping-cart-detail', 'shopping-cart-detail');
        $collection->add('show-all-services-detail', $this->getRouterIdParameter() . '/show-services-detail');
        $collection->add('genere-voucher-by-sale', $this->getRouterIdParameter() . '/genere-voucher-by-sale');
        $collection->add('get-view-all-sales', '/get-view-all-sales');
    }

    public function getTemplate($name) {
        switch ($name) {
            case 'list':
                return 'DaiquiriReservationBundle:Sale:sale_base_list.html.twig';
                break;
            default:
                return parent::getTemplate($name); // TODO: Change the autogenerated stub
                break;
        }
    }

    protected function configureFormFields(FormMapper $formMapper) {
        $formMapper
                ->add('client', 'entity_hidden', array(
                    'class' => 'Daiquiri\AdminBundle\Entity\DUser',
                    'required' => false,
                ))
                ->add('services', 'sonata_type_collection', array(
                    'by_reference' => false,
                    'type_options' => array(
                        // Prevents the "Delete" option from being displayed
                        'delete' => false,
                        'delete_options' => array(
                            // You may otherwise choose to put the field but hide it
                            'type' => 'hidden',
                            // In that case, you need to fill in the options as well
                            'type_options' => array(
                                'mapped' => false,
                                'required' => false,
                            )
                        )
                    )
                        ), array(
                    'edit' => 'inline',
                    'inline' => 'table',
                    'sortable' => 'position',
        ));
    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper) {
        $datagridMapper
                ->add('orderid', null, array('label' => 'Order ID'))
                ->add('currency', null, array('label' => 'Currency'))
                ->add('date', 'doctrine_orm_datetime_range', array('field_type' => 'sonata_type_datetime_range_picker'))
                ->add('createdFromIp')
                ->add('pdfView', null, array('editable' => true))
                ->add('market')
                ->add('amount', null, array(), 'sonata_type_filter_number')


        ;
    }

    protected function configureListFields(ListMapper $listMapper) {
        $listMapper
                ->addIdentifier('orderid', null, array('label' => 'Order ID'))
                ->add('currency', null, array('label' => 'Currency'))
                ->add('amount', null, array('label' => 'Amount'))
                ->add('market', null, array('label' => 'Market'))
                ->add('authCode')
                ->add('cardType')
                ->add('cardCountry')
                ->add('statushtml', 'html', array('label' => 'Status'))
                ->add('getHtmlServices', 'html', array('label' => 'Services'))
                ->add('getHtmlIpAndDate', 'html', array('label' => 'Date/IP'))
                ->add('pdfView', 'text', array('editable' => true))
                ->add('_action', 'actions', array(
                    'actions' => array(
                        'delete' => array(),
                        'pdf_sale' => array(
                            'template' => 'DaiquiriReservationBundle:Sale:pdf_sale.html.twig'
                        ),
                        'show_services' => array(
                            'template' => 'DaiquiriReservationBundle:Sale:show_services_buttom.html.twig',
                        )
                    )
                ))
        ;
    }

    public function prePersist($sale) {
        $this->preUpdate($sale);
    }

    public function preUpdate($sale) {
        $sale->setServices($sale->getServices());
    }

    public $supportsPreviewMode = true;
    protected $datagridValues = array(
        // display the first page (default = 1)
        '_page' => 1,
        // reverse order (default = 'ASC')
        '_sort_order' => 'DESC',
        // name of the ordered field (default = the model's id field, if any)
        '_sort_by' => 'orderid',
    );

}
